<?xml version="1.0"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  https://go.microsoft.com/fwlink/?LinkId=301879
  -->
<configuration>
  <appSettings>
    <add key="webpages:Version" value="3.0.0.0"/>
    <add key="webpages:Enabled" value="false"/>
    <add key="ClientValidationEnabled" value="true"/>
    <add key="Version" value="v3-26-07-2022"/>
    <add key="UnobtrusiveJavaScriptEnabled" value="true"/>
    <!-- ======================================================== -->
    <!-- Configuración de SAP -->
    <add key="sapcompanydb" value="DB_"/>
    <add key="sapusername" value="PC1"/>
    <add key="sappassword" value="1234"/>
    <add key="saplogin" value="https://192.168.1.46:50000/b1s/v1/Login"/>
    <add key="sapconduce" value="https://192.168.1.46:50000/b1s/v1/Invoices?$select =DocEntry,DocNum,DocDate,CardCode,CardName,DocTotal,DocCurrency,Comments,JournalMemo,DocTime,SalesPersonCode,TransNum,VatSum,VatSumSys,DocTotalSys,PickStatus,DocumentStatus,DownPaymentType,U_NCF,U_Usuario,U_claveVendedor,DocumentLines"/>
    <add key="sappatchconduce" value="https://192.168.1.46:50000/b1s/v1/Invoices"/>
    <add key="sapitems" value="https://192.168.1.46:50000/b1s/v1//Items?$select=ItemCode,ItemName,BarCode,ItemsGroupCode,ItemPrices"/>
    <add key="sapitemsgroup" value="https://192.168.1.46:50000/b1s/v1/ItemGroups?$select=Number,GroupName"/>
    <add key="sapcheckitemstock" value="https://192.168.1.46:50000/b1s/v1/$crossjoin(Items,Items/ItemWarehouseInfoCollection)?$filter=(Items/ItemCode eq Items/ItemWarehouseInfoCollection/ItemCode) and (Items/ItemWarehouseInfoCollection/InStock gt 0) &amp;$expand=Items($select=ItemCode,ItemName,QuantityOnStock),Items/ItemWarehouseInfoCollection($select=WarehouseCode,InStock)"/>
    <add key="sapbusinesspartners" value="https://192.168.1.46:50000/b1s/v1/BusinessPartners"/>
    <add key="sapwarehouse" value="https://192.168.1.46:50000/b1s/v1/Warehouses?$select=WarehouseCode,WarehouseName"/>
    <add key="getallarticulossap" value="select * from ArticulosSB1"/>
    <add key="getrutaarticulossap" value="C:\archivosap"/>
    <add key="getallarticulossapby" value="select * from ArticulosSB1 where (BarCode=@BarCode or ItemCode=@ItemCode   )"/>
    <add key="getallitemgroupsap" value="select * from ItemsGroup"/>
    <add key="getallcheckitemstocksap" value="select * from CheckItemStock"/>
    <add key="getallwarehousesap" value="select * from Warehouses"/>
    <!-- ======================================================== -->
    <!-- CRUD de BD -->
    <add key="consulta" value="select *,CONCAT('C:\Proyectos\ChitecAplications\Branchs\develop\imagenes\',trim(codigo_barra),'.jpg') as foto from articulos where codigo_barra=@item"/>
    <add key="consultaimagen" value="select f_url_foto from articulos where codigo_barra=@item"/>
    <add key="getallcodigosbarra" value="Select item as No_Articulo, codbarra as Barcode from itemcodbarra"/>
    <add key="getallcodigosbarraby" value="select id,no_articulo,codigo_barra,created_at,updated_at from articulos where (codigo_barra=@codigo_barra or no_articulo=@no_articulo or alterno1=@alterno1 or alterno2=@alterno2 or alterno3=@alterno3 )"/>
    <add key="getallarticulos" value="Select * from articulos"/>
    <add key="getallarticulosby" value="select * from articulos where (codigo_barra=@codigo_barra or no_articulo=@no_articulo   )"/>
    <add key="getnumeroarticulos" value="SELECT COUNT(1) as nro_articulos FROM articulos"/>
    <add key="costo_total_articulos" value="SELECT SUM(costo * coalesce(existencia, 0)) as costo_total FROM articulos"/>
    <add key="precio_total_articulos" value="SELECT SUM(precio * coalesce(existencia, 0)) as precio_total FROM articulos"/>
    <add key="buscar_articulo_por_numero" value="SELECT * FROM articulos i WHERE i.no_articulo = @no_articulo"/>
    <add key="editar_articulo" value="UPDATE articulos SET codigo_barra = @codigo_barra, alterno1 = @alterno1, alterno2 = @alterno2, alterno3 = @alterno3, descripcion = @descripcion, existencia = @existencia, unidad_medida = @unidad_medida, costo = @costo, precio = @precio, updated_at = @updated_at WHERE no_articulo = @no_articulo"/>
    <add key="crear_articulo" value="insert into articulos (no_articulo, codigo_barra, alterno1, alterno2, alterno3, descripcion, existencia, unidad_medida, costo, precio, referencia, marca, familia, created_at, updated_at) values(@no_articulo, @codigo_barra, @alterno1, @alterno2, @alterno3, @descripcion, @existencia, @unidad_medida, @costo, @precio, @referencia, @marca, @familia, @created_at, @updated_at)"/>
    <add key="getdetalleinventario" value=" SELECT  d.*, 0 as es_cantidad_igual_tiros,                                                   coalesce(tu.descripcion, '') as tipo_ubicacion                                                   FROM detalle_inventario d                                                   left join ubicaciones u                                                   on (d.id_ubicacion = u.id)                                                   left join tipo_ubicacion tu                                                   on (u.id_tipo_ubicacion = tu.id)                                                   WHERE 1 = 1                           "/>
    <add key="getdetalleinventariocantidadigualatiro" value="SELECT    d.*, 0 as es_cantidad_igual_tiros, coalesce(tu.descripcion, '') as tipo_ubicacion      FROM detalle_inventario d        left join ubicaciones u        on (d.id_ubicacion = u.id)        left join tipo_ubicacion tu        on (u.id_tipo_ubicacion = tu.id)        WHERE 1 = 1       AND       ( d.id in (             SELECT    de.id-1 as idlast       FROM detalle_inventario de       WHERE 1 = 1       AND de.no_detalleInv = de.cantidad       )       or d.id in (             SELECT    de.id       FROM detalle_inventario de       WHERE 1 = 1       AND de.no_detalleInv = de.cantidad       )       or d.id in (             SELECT    de.id+1 as idnext        FROM detalle_inventario de       WHERE 1 = 1       AND de.no_detalleInv = de.cantidad       ) )   "/>
    <add key="getdetalleinventarionoarticuloduplicado" value=" SELECT  d.*, 0 as es_cantidad_igual_tiros,                                               coalesce(tu.descripcion, '') as tipo_ubicacion                                               FROM detalle_inventario d                                               left join ubicaciones u                                               on (d.id_ubicacion = u.id)                                               left join tipo_ubicacion tu                                               on (u.id_tipo_ubicacion = tu.id)                                               WHERE d.no_articulo IN (SELECT d2.no_articulo FROM detalle_inventario d2 GROUP BY d2.no_articulo, d2.cantidad                                                       having count(*) &gt;= 2)                         "/>
    <add key="getnumero_tiros" value="SELECT COUNT(1) as nro_tiros FROM detalle_inventario"/>
    <add key="getcostototal_inventario" value="SELECT SUM(costo_total) as costo_total FROM detalle_inventario"/>
    <add key="getpreciototal_inventario" value="SELECT SUM(precio_total) as precio_total FROM detalle_inventario"/>
    <add key="crear_detalle_inventario_transitorio" value="INSERT INTO detalle_inventario_transitorio (id_terminal, no_detalleInv, no_articulo, codigo_barra, alterno1, alterno2, alterno3, descripcion, cantidad, costo, costo_total, precio, precio_total, id_ubicacion, cod_alterno, fecha_registro, fecha_modificacion, id_usuario_registro, id_usuario_modificacion, codigo_capturado, id_auditor, id_tipo_auditoria, pre_conteo, cantidad_auditada, diferencia, porcentaje_diferencia, id_tipo_error, notas, estado, created_at, updated_at, generado, ultimo_mensaje_error,id_almacen) VALUES(@id_terminal, @no_detalleInv, @no_articulo, @codigo_barra, @alterno1, @alterno2, @alterno3, @descripcion, @cantidad, @costo, @costo_total, @precio, @precio_total, @id_ubicacion, @cod_alterno, @fecha_registro, @fecha_modificacion, @id_usuario_registro, @id_usuario_modificacion, @codigo_capturado, @id_auditor, @id_tipo_auditoria, @pre_conteo, @cantidad_auditada, @diferencia, @porcentaje_diferencia, @id_tipo_error, @notas, @estado, @created_at, @updated_at, @generado, @ultimo_mensaje_error,@id_almacen)"/>
    <add key="crear_detalle_inventario" value="INSERT INTO detalle_inventario (id_terminal, no_detalleInv, no_articulo, codigo_barra, alterno1, alterno2, alterno3, descripcion, cantidad, costo, costo_total, precio, precio_total, id_ubicacion, cod_alterno, fecha_registro, fecha_modificacion, id_usuario_registro, id_usuario_modificacion, codigo_capturado, id_auditor, id_tipo_auditoria, pre_conteo, cantidad_auditada, diferencia, porcentaje_diferencia, id_tipo_error, notas, estado, created_at, updated_at,id_almacen) VALUES(@id_terminal, @no_detalleInv, @no_articulo, @codigo_barra, @alterno1, @alterno2, @alterno3, @descripcion, @cantidad, @costo, @costo_total, @precio, @precio_total, @id_ubicacion, @cod_alterno, @fecha_registro, @fecha_modificacion, @id_usuario_registro, @id_usuario_modificacion, @codigo_capturado, @id_auditor, @id_tipo_auditoria, @pre_conteo, @cantidad_auditada, @diferencia, @porcentaje_diferencia, @id_tipo_error, @notas, @estado, @created_at, @updated_at,@id_almacen)"/>
    <add key="editar_detalle_inventario" value="UPDATE detalle_inventario SET no_articulo = @no_articulo, codigo_barra = @codigo_barra, alterno1 = @alterno1, alterno2 = @alterno2, alterno3 = @alterno3, descripcion = @descripcion, cantidad = @cantidad, costo = @costo, costo_total = @costo_total, precio = @precio, precio_total = @precio_total, id_ubicacion = @id_ubicacion, cod_alterno = @cod_alterno, fecha_registro = @fecha_registro, fecha_modificacion = @fecha_modificacion, id_usuario_registro = @id_usuario_registro, id_usuario_modificacion = @id_usuario_modificacion, estado = @estado, updated_at = @updated_at,id_almacen=@id_almacen WHERE no_detalleInv = @no_detalleInv AND id_terminal = @id_terminal"/>
    <add key="editar_duplicado_detalle_inventario" value="UPDATE detalle_inventario SET no_articulo = @no_articulo, id_ubicacion = @id_ubicacion, cantidad = @cantidad, fecha_registro = @fecha_registro, fecha_modificacion = @fecha_modificacion, id_usuario_registro = @id_usuario_registro, id_usuario_modificacion = @id_usuario_modificacion, estado = @estado, codigo_capturado = @codigo_capturado, costo_total = @costo_total, precio_total = @precio_total, costo = @costo, precio = @precio, codigo_barra = @codigo_barra,id_almacen=@id_almacen WHERE no_detalleInv = @no_detalleInv AND id_terminal = @id_terminal"/>
    <add key="editar_cantidad_detalle_inventario_con_ubicacion" value="UPDATE detalle_inventario SET cantidad = @cantidad, costo = @costo, costo_total = @costo_total, precio = @precio, precio_total = @precio_total, id_ubicacion = @id_ubicacion, cod_alterno = @cod_alterno WHERE id_terminal = @id_terminal AND no_detalleInv = @no_detalleInv"/>
    <add key="editar_cantidad_detalle_inventario_sin_ubicacion" value="UPDATE detalle_inventario SET cantidad = @cantidad, costo = @costo, costo_total = @costo_total, precio = @precio, precio_total = @precio_total WHERE id_terminal = @id_terminal AND no_detalleInv = @no_detalleInv"/>
    <add key="editar_detalle_inventario_auditoria" value="UPDATE detalle_inventario SET pre_conteo = @pre_conteo, cantidad = @cantidad, cantidad_auditada = @cantidad_auditada, diferencia = @diferencia, porcentaje_diferencia = @porcentaje_diferencia, id_tipo_error = @id_tipo_error, notas = @notas, id_tipo_auditoria = @id_tipo_auditoria, costo_total = @costo_total, precio_total = @precio_total, costo = @costo, precio = @precio WHERE id = @id"/>
    <add key="editar_detalle_inventario_auditoria_manual" value="UPDATE detalle_inventario SET id_auditor = @id_auditor, id_tipo_auditoria = @id_tipo_auditoria WHERE id = @id"/>
    <add key="buscar_detalle_inventario_por_terminal_y_numero" value="SELECT * FROM detalle_inventario WHERE id_terminal = @id_terminal AND no_detalleInv = @no_detalleInv"/>
    <add key="buscar_detalle_inventario_por_id" value="SELECT * FROM detalle_inventario WHERE id = @id"/>
    <add key="editar_detalle_inventario_transitorio" value="UPDATE detalle_inventario_transitorio SET generado = 1 WHERE id = @id"/>
    <add key="buscar_detalle_inventario_transitorio" value="SELECT * FROM detalle_inventario_transitorio WHERE generado = 0"/>
    <add key="getalmacen" value="Select nombre as descripcion, almacen as cod_alterno from almacenes"/>
    <add key="crear_almacen" value="insert into almacen (descripcion, cod_alterno, estado,  created_at, updated_at) values(@descripcion, @cod_alterno, @estado, @created_at, @updated_at)"/>
    <add key="editar_almacen" value="update almacen set descripcion = @descripcion, cod_alterno = @cod_alterno, estado = @estado, updated_at = @updated_at where id = @id "/>
    <add key="getubicaciones" value="select u.*, COALESCE(r.nro_tiros,0) as nro_tiros , COALESCE(r.suma_articulos,0) as suma_articulos,                  COALESCE(r.costo_total,0) as costo_total ,COALESCE(r.precio_total,0) as precio_total                   from ubicaciones u left join v_resumebyubicacion r on u.id=r.id_ubicacion  where 1=1"/>
    <add key="getubicacionesbytipo" value=" select u.*, COALESCE(r.nro_tiros,0) as nro_tiros , COALESCE(r.suma_articulos,0) as suma_articulos,                  COALESCE(r.costo_total,0) as costo_total ,COALESCE(r.precio_total,0) as precio_total                   from ubicaciones u left join v_resumebyubicacion r on u.id=r.id_ubicacion     where u.id_tipo_ubicacion=@idtipoubicacion"/>
    <add key="buscar_ubicacion_por_id" value="SELECT * FROM ubicaciones WHERE id = @id"/>
    <add key="crear_ubicacion" value="insert into ubicaciones (descripcion, cod_alterno, estado, id_tipo_ubicacion, created_at, updated_at) values(@descripcion, @cod_alterno, @estado, @id_tipo_ubicacion, @created_at, @updated_at)"/>
    <add key="editar_ubicacion" value="update ubicaciones set descripcion = @descripcion, cod_alterno = @cod_alterno, estado = @estado, id_tipo_ubicacion = @id_tipo_ubicacion, updated_at = @updated_at where id = @id"/>
    <add key="getasignaciones" value="select * from asignaciones"/>
    <add key="getasignacionesbyusuario" value="select * from asignaciones where id_usuario=@usuario"/>
    <add key="buscar_asignacion_por_codigo_unico" value="SELECT * FROM asignaciones WHERE codigo_unico = @codigo_unico"/>
    <add key="crear_asignacion" value="INSERT INTO asignaciones (codigo_unico, cod_alterno, descripcion, id_usuario, id_ayudante, nombre_usuario, nombre_ayudante, created_at, updated_at) VALUES(@codigo_unico, @cod_alterno, @descripcion, @id_usuario, @id_ayudante, @nombre_usuario, @nombre_ayudante, @created_at, @updated_at)"/>
    <add key="editar_duplicado_asignacion" value="UPDATE asignaciones SET cod_alterno = @cod_alterno, descripcion = @descripcion, id_usuario = @id_usuario, id_ayudante = @id_ayudante, nombre_usuario = @nombre_usuario, nombre_ayudante = @nombre_ayudante, updated_at = @updated_at WHERE codigo_unico = @codigo_unico"/>
    <add key="buscar_ayudante_por_id" value="SELECT * FROM ayudantes WHERE id = @id"/>
    <add key="buscar_ayudantes" value="SELECT * FROM ayudantes "/>
    <add key="buscar_ayudante_por_codigo_unico" value="SELECT * FROM ayudantes WHERE codigo_unico = @codigo_unico"/>
    <add key="crear_ayudante" value="INSERT INTO ayudantes(codigo_unico, nombre, created_at, updated_at) values(@codigo_unico, @nombre, @created_at, @updated_at)"/>
    <add key="editar_ayudante" value="UPDATE ayudantes SET nombre = @nombre, updated_at = @updated_at WHERE codigo_unico = @codigo_unico"/>
    <add key="buscar_usuario_por_id" value="SELECT * FROM usuarios WHERE id = @id"/>
    <add key="getusuarios" value="SELECT u.*,  (SELECT COUNT(1) FROM detalle_inventario d WHERE d.id_usuario_registro = u.id) as nro_tiros FROM usuarios u"/>
    <add key="crear_usuario" value="insert into usuarios(nombre, apellido, usuario, password, estado, created_at, updated_at) values(@nombre, @apellido, @usuario, @password, @estado, @created_at, @updated_at)"/>
    <add key="editar_usuario" value="update usuarios set nombre = @nombre, apellido = @apellido, estado = @estado, usuario = @usuario, password = @password, updated_at = @updated_at where id = @id"/>
    <add key="crear_clasificacion" value="insert into clasificacion(codigo_unico, descripcion, created_at, updated_at) values(@codigo_unico, @descripcion, @created_at, @updated_at)"/>
    <add key="editar_clasificacion" value="update clasificacion set descripcion = @descripcion, updated_at = @updated_at where codigo_unico = @codigo_unico"/>
    <add key="getusuariosauditoria" value="SELECT * from usuarios_auditoria"/>
    <add key="crear_usuario_auditoria" value="insert into usuarios_auditoria(nombre, apellido, usuario, password, estado, tipo_usuario, created_at, updated_at) values(@nombre, @apellido, @usuario, @password, @estado, @tipo_usuario, @created_at, @updated_at)"/>
    <add key="getdetalleauditorias" value="SELECT *, case  when d.cantidad=d.no_detalleInv then 1 else 0 end as es_cantidad_igual_tiros FROM detalle_auditorias d"/>
    <add key="crear_detalle_auditoria" value="insert into detalle_auditorias (id_terminal, no_detalleInv, no_articulo, descripcion, id_tipo_ubicacion, cod_alterno, pre_conteo, cantidad_auditada, diferencia, porcentaje_diferencia, id_tipo_error, notas, codigo_barra, id_usuario_registro, secuencia_tiro, alterno1, alterno2, alterno3, cantidad, costo, costo_total, precio, precio_total, id_ubicacion, fecha_registro, fecha_modificacion, id_usuario_modificacion, id_auditor, id_tipo_auditoria, estado, created_at, updated_at) values(@id_terminal, @no_detalleInv, @no_articulo, @descripcion, @id_tipo_ubicacion, @cod_alterno, @pre_conteo, @cantidad_auditada, @diferencia, @porcentaje_diferencia, @id_tipo_error, @notas, @codigo_barra, @id_usuario_registro, @secuencia_tiro, @alterno1, @alterno2, @alterno3, @cantidad, @costo, @costo_total, @precio, @precio_total, @id_ubicacion, @fecha_registro, @fecha_modificacion, @id_usuario_modificacion, @id_auditor, @id_tipo_auditoria, @estado, @created_at, @updated_at)"/>
    <add key="guardar_historial_de_jobs" value="INSERT INTO historial_de_jobs(job, fue_completado, mensaje_error, fecha) VALUES(@job, @fue_completado, @mensaje_error, @fecha)"/>
    <add key="create_business_partner" value="INSERT INTO BusinessPartners (BusinessName, CardCode, CardName, CardType, Notes, FederalTaxId, Currency, VatLiable, CreatedAt, UpdatedAt) VALUES (@BusinessName, @CardCode, @CardName, @CardType, @Notes, @FederalTaxId, @Currency, @VatLiable, @CreatedAt, @UpdatedAt);"/>
    <add key="buscar_business_partners" value="SELECT BusinessName, CardCode, CardName, CardType, Notes, FederalTaxId, Currency, VatLiable FROM BusinessPartners"/>
    <add key="get_picking_headers" value="SELECT * FROM PickingOrdersheader where 1=1  "/>
    <add key="get_transfer_headers" value="SELECT * FROM StockTranfers_Header where 1=1  "/>
    <add key="get_transfer_headers_in" value="SELECT * FROM StockTranfers_Header_in where 1=1  "/>
    <add key="get_picking_details" value="SELECT * FROM PickingOrderDetail where DocEntry=@DocEntry "/>
    <add key="get_transfer_details" value="SELECT * FROM StockTranfers_detail where DocEntry=@DocEntry "/>
    <add key="get_transfer_details_in" value="SELECT * FROM StockTranfers_detail_in where DocEntry=@DocEntry "/>
    <add key="get_purchase_order_headers_all" value="SELECT * FROM PurchaseOrderHeader "/>
    <add key="get_purchase_order_headers" value="SELECT * FROM PurchaseOrderHeader WHERE DocumentStatus = @DocumentStatus"/>
    <add key="get_purchase_order_headers_all_batch" value="SELECT * FROM PurchaseOrderHeaderBath "/>
    <add key="get_purchase_order_headers_batch" value="SELECT * FROM PurchaseOrderHeaderBath WHERE DocumentStatus = @DocumentStatus"/>
    <add key="get_purchase_order_by_doc" value="SELECT * FROM PurchaseOrderHeader WHERE DocNum = @DocNum"/>
    <add key="get_purchase_order_by_doc_batch" value="SELECT * FROM PurchaseOrderHeaderBath WHERE DocNum = @DocNum"/>
    <add key="get_purchase_order_details" value="SELECT * FROM PurchaseOrderDetail WHERE DocNum = @DocNum"/>
    <add key="get_purchase_order_details_batch" value="SELECT * FROM PurchaseOrderDetailBath WHERE DocNum = @DocNum"/>
    <add key="get_purchase_order_details_by_line_number" value="SELECT * FROM PurchaseOrderDetail WHERE DocNum = @DocNum AND LineNum = @LineNum"/>
    <add key="get_picking_details_by_line_number" value="SELECT * FROM PickingOrderDetail WHERE DocEntry = @DocEntry AND LineNum = @LineNum"/>
    <add key="get_transfer_details_by_line_number" value="SELECT * FROM StockTranfers_detail WHERE DocEntry = @DocEntry AND LineNum = @LineNum"/>
    <add key="get_transfer_details_by_line_number_in" value="SELECT * FROM StockTranfers_detail_in WHERE DocEntry = @DocEntry AND LineNum = @LineNum"/>
    <add key="get_transfer_by_doc" value="SELECT * FROM StockTranfers_Header WHERE DocEntry = @DocEntry"/>
    <add key="get_transfer_by_doc_in" value="SELECT * FROM StockTranfers_Header_in WHERE DocEntry = @DocEntry"/>
    <add key="get_purchase_order_details_by_line_number_batch" value="SELECT * FROM PurchaseOrderDetailBath WHERE DocNum = @DocNum AND LineNum = @LineNum"/>
    <add key="get_pending_purchase_order_header" value="SELECT * FROM PurchaseOrderHeader WHERE DocNum = @DocNum AND DocumentStatus = 'pendiente'"/>
    <add key="get_pending_purchase_order_header_batch" value="SELECT * FROM PurchaseOrderHeaderBath WHERE DocNum = @DocNum AND DocumentStatus = 'pendiente'"/>
    <add key="update_purchase_order_batch_detail" value="UPDATE PurchaseOrderDetailBath SET ItemCode = @ItemCode, ItemDescription = @ItemDescription, Quantity = @Quantity, Costo_Unitario = @Costo_Unitario, BarCode = @BarCode, UoMCode = @UoMCode, LineStatus = @LineStatus, UserName = @UserName, WarehouseCode = @WarehouseCode, BinLocation = @BinLocation, Costo_Total = @Costo_Total, Itbis = @Itbis WHERE DocNum = @DocNum AND LineNum = @LineNum"/>
    <add key="update_purchase_order_batch_header" value="UPDATE PurchaseOrderHeaderBath SET DocDate = @DocDate, DocDueDate = @DocDueDate, CardName = @CardName,CardCode=@CardCode, NumAtCard = @NumAtCard, DocRate = @DocRate, JournalMemo = @JournalMemo, TaxDate = @TaxDate, DocTotalFc = @DocTotalFc, DocTotalSys = @DocTotalSys, DocumentStatus = @DocumentStatus, U_NCF = @U_NCF, TotalLines = @TotalLines WHERE DocNum = @DocNum"/>
    <add key="insert_purchase_order_batch_detail" value="insert into PurchaseOrderDetailBath(DocNum , LineNum ,ItemCode , ItemDescription , Quantity , Costo_Unitario, BarCode , UoMCode , LineStatus , UserName , WarehouseCode , BinLocation , Costo_Total , Itbis) values ( @DocNum,  @LineNum, @ItemCode,  @ItemDescription,  @Quantity,  @Costo_Unitario,  @BarCode,  @UoMCode,  @LineStatus,  @UserName,  @WarehouseCode,  @BinLocation,  @Costo_Total, @Itbis)"/>
    <add key="insert_purchase_order_batch_header" value="insert into PurchaseOrderHeaderBath (DocNum , DocDate , DocDueDate , CardName,CardCode , NumAtCard , DocRate , JournalMemo , TaxDate , DocTotalFc , DocTotalSys , DocumentStatus , U_NCF , TotalLines) values ( @DocNum,  @DocDate,  @DocDueDate,  @CardName,@CardCode,  @NumAtCard, @DocRate,  @JournalMemo,  @TaxDate, @DocTotalFc, @DocTotalSys, @DocumentStatus, @U_NCF,@TotalLines)"/>
    <add key="update_purchase_order_detail" value="UPDATE PurchaseOrderDetail SET ItemCode = @ItemCode, ItemDescription = @ItemDescription, Quantity = @Quantity, Costo_Unitario = @Costo_Unitario, BarCode = @BarCode, UoMCode = @UoMCode, LineStatus = @LineStatus, UserName = @UserName, WarehouseCode = @WarehouseCode, BinLocation = @BinLocation, Costo_Total = @Costo_Total, Itbis = @Itbis, QuantityConfirm=@QuantityConfirm WHERE DocNum = @DocNum AND LineNum = @LineNum"/>
    <add key="update_purchase_order_header" value="UPDATE PurchaseOrderHeader SET DocDate = @DocDate, DocDueDate = @DocDueDate,CardCode=@CardCode, CardName = @CardName, NumAtCard = @NumAtCard, DocRate = @DocRate, JournalMemo = @JournalMemo, TaxDate = @TaxDate, DocTotalFc = @DocTotalFc, DocTotalSys = @DocTotalSys, DocumentStatus = @DocumentStatus, U_NCF = @U_NCF, TotalLines = @TotalLines WHERE DocNum = @DocNum"/>
    <add key="insert_purchase_order_detail" value="insert into PurchaseOrderDetail(DocNum , LineNum ,ItemCode , ItemDescription , Quantity , Costo_Unitario, BarCode , UoMCode , LineStatus , UserName , WarehouseCode , BinLocation , Costo_Total , Itbis,QuantityConfirm) values ( @DocNum,  @LineNum, @ItemCode,  @ItemDescription,  @Quantity,  @Costo_Unitario,  @BarCode,  @UoMCode,  @LineStatus,  @UserName,  @WarehouseCode,  @BinLocation,  @Costo_Total, @Itbis,@QuantityConfirm)"/>
    <add key="insert_purchase_order_header" value="insert into PurchaseOrderHeader (DocNum , DocDate , DocDueDate , CardName,CardCode , NumAtCard , DocRate , JournalMemo , TaxDate , DocTotalFc , DocTotalSys , DocumentStatus , U_NCF , TotalLines) values ( @DocNum,  @DocDate,  @DocDueDate,  @CardName,@CardCode,  @NumAtCard, @DocRate,  @JournalMemo,  @TaxDate, @DocTotalFc, @DocTotalSys, @DocumentStatus, @U_NCF,@TotalLines)"/>
    <add key="buscar_encabezado_recepcion_orden_compra" value="SELECT encabezado.id, encabezado.fecha, encabezado.id_orden_compra, encabezado.fecha_registro, encabezado.id_contenedor, encabezado.numero_factura, encabezado.comentario, encabezado.id_usuario FROM recepcion_orden_compra encabezado INNER JOIN detalle_recepcion_orden_compra detalle ON encabezado.id = detalle.id_recepcion_orden_compra WHERE 1 = 1"/>
    <add key="buscar_recepciones_orden_compra" value="SELECT * FROM detalle_recepcion_orden_compra WHERE id_recepcion_orden_compra = @id_recepcion_orden_compra"/>
    <add key="buscar_recepcion_orden_compra_por_id" value="SELECT * FROM recepcion_orden_compra WHERE id_orden_compra = @id_orden_compra"/>
    <add key="insertar_encabezado_orden_compra" value="INSERT INTO recepcion_orden_compra(fecha, id_orden_compra, id_contenedor, numero_factura, comentario, id_usuario) VALUES(@fecha, @id_orden_compra, @id_contenedor, @numero_factura, @comentario, @id_usuario); SELECT SCOPE_IDENTITY()"/>
    <add key="buscar_detalle_orden_compra_por_encabezado_y_articulo" value="SELECT * FROM detalle_recepcion_orden_compra WHERE id_recepcion_orden_compra = @id_recepcion_orden_compra AND no_articulo = @no_articulo"/>
    <add key="insertar_detalle_recepcion_oder_compra" value="INSERT INTO [detalle_recepcion_orden_compra] VALUES(@id_recepcion_orden_compra, @no_articulo, @cantidad, @id_ubicacion);"/>
    <add key="buscar_detalle_orden_compra_por_id_y_articulo" value="SELECT * FROM PurchaseOrderDetail WHERE DocNum = @DocNum AND ItemCode = @ItemCode"/>
    <add key="actualizar_estado_articulo_detalle_orden_compra" value="UPDATE PurchaseOrderDetail SET LineStatus = @LineStatus WHERE DocNum = @DocNum AND ItemCode = @ItemCode"/>
    <add key="actualizar_estado_orden_compra" value="UPDATE PurchaseOrderHeader SET DocumentStatus = @DocumentStatus WHERE DocNum = @DocNum"/>
    <add key="buscar_asignaciones_por_usuario" value="SELECT * FROM asignaciones WHERE 1 = 1"/>
    <add key="buscar_ayudantes" value="SELECT * FROM ayudantes"/>
    <add key="buscar_estadisticas_inventario" value="SELECT COUNT(DISTINCT no_articulo) as cantidad_articulos, SUM(costo_total) as costo_total, SUM(precio_total) as precio_total FROM detalle_inventario"/>
    <add key="buscar_articulos_almacen_no_existentes__en_tienda" value="SELECT inventario_almacen.[no_articulo],inventario_almacen.[id],inventario_almacen.[id_terminal],inventario_almacen.[no_detalleInv],inventario_almacen.[codigo_barra],inventario_almacen.[alterno1],inventario_almacen.[alterno2],inventario_almacen.[alterno3],inventario_almacen.[descripcion],inventario_almacen.[cantidad],inventario_almacen.[costo],inventario_almacen.[costo_total],inventario_almacen.[precio],inventario_almacen.[precio_total],inventario_almacen.[id_ubicacion],inventario_almacen.[cod_alterno],inventario_almacen.[fecha_registro],inventario_almacen.[fecha_modificacion],inventario_almacen.[id_usuario_registro],inventario_almacen.[id_usuario_modificacion],inventario_almacen.[id_auditor],inventario_almacen.[id_tipo_auditoria],inventario_almacen.[pre_conteo],inventario_almacen.[cantidad_auditada],inventario_almacen.[diferencia],inventario_almacen.[porcentaje_diferencia],inventario_almacen.[id_tipo_error],inventario_almacen.[notas],inventario_almacen.[estado],inventario_almacen.[codigo_capturado],inventario_almacen.[created_at],inventario_almacen.[updated_at] FROM detalle_inventario inventario_almacen inner join ubicaciones ubicacion_almacen on ubicacion_almacen.id = inventario_almacen.id_ubicacion where ubicacion_almacen.id_tipo_ubicacion = 2 AND (NOT EXISTS(select 1 from detalle_inventario inventario_tienda inner join ubicaciones ubicacion_tienda on ubicacion_tienda.id = inventario_tienda.id_ubicacion WHERE inventario_tienda.no_articulo = inventario_almacen.no_articulo AND ubicacion_tienda.id_tipo_ubicacion = 1 )) group by inventario_almacen.[no_articulo],inventario_almacen.[id],inventario_almacen.[id_terminal],inventario_almacen.[no_detalleInv],inventario_almacen.[codigo_barra],inventario_almacen.[alterno1],inventario_almacen.[alterno2],inventario_almacen.[alterno3],inventario_almacen.[descripcion],inventario_almacen.[cantidad],inventario_almacen.[costo],inventario_almacen.[costo_total],inventario_almacen.[precio],inventario_almacen.[precio_total],inventario_almacen.[id_ubicacion],inventario_almacen.[cod_alterno],inventario_almacen.[fecha_registro],inventario_almacen.[fecha_modificacion],inventario_almacen.[id_usuario_registro],inventario_almacen.[id_usuario_modificacion],inventario_almacen.[id_auditor],inventario_almacen.[id_tipo_auditoria],inventario_almacen.[pre_conteo],inventario_almacen.[cantidad_auditada],inventario_almacen.[diferencia],inventario_almacen.[porcentaje_diferencia],inventario_almacen.[id_tipo_error],inventario_almacen.[notas],inventario_almacen.[estado],inventario_almacen.[codigo_capturado],inventario_almacen.[created_at],inventario_almacen.[updated_at]"/>
    <add key="getdetalleinventariociclico" value="select * from detalle_inventario_ciclico WHERE 1 = 1"/>
    <add key="getlogcodigosinexistentes" value="SELECT d.*, COALESCE(u.descripcion, '') as descripcionubicacion,COALESCE(a.descripcion, '') as almacen, COALESCE(a.cod_alterno, '') as cod_alterno_almacen FROM log_codigos_inexistentes d left join ubicaciones u  on(d.id_ubicacion = u.id) left join almacen a on(a.id = d.id_almacen) WHERE 1 = 1  "/>
    <add key="getlogimpresiones" value="select  l.Id, l.Id_Terminal, l.Barcode, a.descripcion, l.cantidad_impresiones, l.Id_usuario, l.No_articulo, l.Fecha from log_impresiones l left join articulos a on  a.no_articulo=l.No_articulo and a.codigo_barra=l.Barcode where 1=1  "/>
    <add key="crear_logimpresion" value="INSERT INTO log_impresiones (Id_Terminal,Barcode,cantidad_impresiones,Id_usuario,No_articulo,Fecha)  VALUES (@Id_Terminal,@Barcode,@cantidad_impresiones,@Id_usuario,@No_articulo,@Fecha)"/>
    <add key="editar_logimpresion" value="UPDATE log_impresiones set Id_Terminal = @Id_Terminal,  Barcode = @Barcode, cantidad_impresiones = @cantidad_impresiones, No_articulo = @No_articulo, Id_usuario = @Id_usuario, Fecha = @Fecha   WHERE Barcode = @Barcode"/>
    <add key="crear_logcodigosinexistentes" value="INSERT INTO log_codigos_inexistentes (Id_Terminal,Barcode,id_almacen,Id_usuario,Id_Ubicacion,Fecha)  VALUES (@Id_Terminal,@Barcode,@id_almacen,@Id_usuario,@Id_Ubicacion,@Fecha)"/>
    <add key="editar_logcodigosinexistentes" value="UPDATE log_codigos_inexistentes set Id_Terminal = @Id_Terminal,  Barcode = @Barcode, id_almacen = @id_almacen, Id_Ubicacion = @Id_Ubicacion, Id_usuario = @Id_usuario, Fecha = @Fecha   WHERE Barcode = @Barcode"/>
    <add key="getarticulos_ubicacion" value="SELECT * FROM articulos_ubicaciones where 1=1 "/>
    <add key="buscar_detalle_inventario_ciclico_por_no_conteo" value="SELECT No_Conteo FROM detalle_inventario_ciclico WHERE No_interno=@No_interno"/>
    <add key="guardar_detalle_inventario_ciclico" value="INSERT INTO detalle_inventario_ciclico ( No_interno,No_Conteo, Nombre_Conteo, No_detalleinv_ciclico, Tipo_Conteo, No_Articulo, Codigo_Barra, Alterno1, Alterno2, Alterno3, Descripcion, Existencia, Cantidad_Transito, Unidad_Medida, Costo, Precio, Marca, id_Familia_Productos, id_Clasificacion_inventario, Fecha_asignada_ciclico, estado, Id_Terminal, Wharehouse_Existencia, Diferencia, Diferencia_porcentual, Cantidad, Id_Usuario_Registro, Fecha_Registro, Cantidad_Contada, Observaciones, Costing_Code, Wharehouse, Ubicacion, Fecha_Conteo, Hora_Conteo) &#xA; VALUES( @No_interno,@No_Conteo, @Nombre_Conteo, @No_detalleinv_ciclico, @Tipo_Conteo, @No_Articulo, @Codigo_Barra, @Alterno1, @Alterno2, @Alterno3, @Descripcion, @Existencia, @Cantidad_Transito, @Unidad_Medida, @Costo, @Precio, @Marca, @id_Familia_Productos, @id_Clasificacion_inventario, @Fecha_asignada_ciclico, @estado, @Id_Terminal, @Wharehouse_Existencia, @Diferencia, @Diferencia_porcentual, @Cantidad, coalesce(@Id_Usuario_Registro,0), @Fecha_Registro, @Cantidad_Contada, @Observaciones, @Costing_Code, @Wharehouse, @ubicacion, GETDATE(), GETDATE() )&#xA;"/>
    <add key="editar_detalle_inventario_ciclico" value="    UPDATE detalle_inventario_ciclico SET  No_interno=@No_interno,No_Conteo = @No_Conteo, Nombre_Conteo = @Nombre_Conteo, No_detalleinv_ciclico = @No_detalleinv_ciclico, Tipo_Conteo = @Tipo_Conteo,           No_Articulo = @No_Articulo, Codigo_Barra = @Codigo_Barra, Alterno1 = @Alterno1, Alterno2 = @Alterno2, Alterno3 = @Alterno3, Descripcion = @Descripcion, Existencia = @Existencia,           Cantidad_Transito = @Cantidad_Transito, Unidad_Medida = @Unidad_Medida, Costo = @Costo, Precio = @Precio,           Marca = @Marca, id_Familia_Productos = @id_Familia_Productos, id_Clasificacion_inventario = @id_Clasificacion_inventario,           Fecha_asignada_ciclico = @Fecha_asignada_ciclico, estado = @estado, Id_Terminal = @Id_Terminal,           Wharehouse_Existencia = @Wharehouse_Existencia, Diferencia = @Diferencia, Diferencia_porcentual = @Diferencia_porcentual,           Cantidad = @Cantidad, Id_Usuario_Registro = coalesce(@Id_Usuario_Registro,0),           Cantidad_Contada = @Cantidad_Contada, Observaciones = @Observaciones, Costing_Code = @Costing_Code,          Wharehouse = @Wharehouse, Ubicacion = @ubicacion, Fecha_Conteo = @Fecha_Conteo,Hora_Conteo=@Hora_Conteo          WHERE No_interno=@No_interno    "/>
    <add key="update_picking_header" value="UPDATE PickingOrdersheaderSET DocEntry = @DocEntry,    DocNum = @DocNum,    DocDate = @DocDate,    CardCode = @CardCode,    CardName = @CardName,    DocTotal = @DocTotal,    DocCurrency = @DocCurrency,    Comments = @Comments,    JournalMemo = @JournalMemo,    DocTime = @DocTime,    SalesPersonCode = @SalesPersonCode,    TransNum = @TransNum,    VatSum = @VatSum,    VatSumSys = @VatSumSys,    DocTotalSys = @DocTotalSys,    PickStatus = @PickStatus,    DocumentStatus = @DocumentStatus,    DownPaymentType = @DownPaymentType,    U_NCF = @U_NCF,    U_Usuario = @U_Usuario,    U_claveVendedor = @U_claveVendedor WHERE DocEntry = @DocEntry;"/>
    <add key="insert_picking_header" value="INSERT INTO PickingOrdersheader(DocEntry, DocNum, DocDate, CardCode, CardName, DocTotal, DocCurrency, Comments, JournalMemo, DocTime,  SalesPersonCode, TransNum, VatSum, VatSumSys, DocTotalSys, PickStatus, DocumentStatus, DownPaymentType, U_NCF, U_Usuario, U_claveVendedor)VALUES (@DocEntry, @DocNum, @DocDate, @CardCode, @CardName, @DocTotal, @DocCurrency, @Comments, @JournalMemo, @DocTime, @SalesPersonCode, @TransNum,  @VatSum, @VatSumSys, @DocTotalSys, @PickStatus, @DocumentStatus, @DownPaymentType, @U_NCF, @U_Usuario, @U_claveVendedor);"/>
    <add key="update_picking_detail" value="UPDATE   PickingOrderDetail  SET   DocEntry = @DocEntry,  DocNum = @DocNum,  LineNum = @LineNum,  ItemCode = @ItemCode,  ItemDescription = @ItemDescription,  Quantity = @Quantity,  Price = @Price,  PriceAfterVAT = @PriceAfterVAT,  Currency = @Currency,  WarehouseCode = @WarehouseCode,  BarCode = @BarCode,  PickQuantity = @PickQuantity,  PickListIdNumber = @PickListIdNumber,  [FreeText] = @FreeText,  ShippingMethod = @ShippingMethod,  NetTaxAmount = @NetTaxAmount,  LineStatus = @LineStatus,  PackageQuantity = @PackageQuantity,  ActualDeliveryDate = @ActualDeliveryDate,  UoMCode = @UoMCode,  InventoryQuantity = @InventoryQuantity,  U_metrosxpiezas = @U_metrosxpiezas,  U_articulosTienda = @U_articulosTienda,  U_metrosCliente = @U_metrosCliente,  U_Mayor = @U_Mayor WHERE DocEntry=@DocEntry ;"/>
    <add key="update_picking_detail_patch" value="UPDATE   PickingOrderDetail  SET   [FreeText] = @FreeText   WHERE DocEntry=@DocEntry and LineNum = @LineNum and ItemCode = @ItemCode  ;"/>
    <add key="insert_picking_detail" value="INSERT INTO   PickingOrderDetail(  DocEntry,  DocNum,  LineNum,  ItemCode,  ItemDescription,  Quantity,  Price,  PriceAfterVAT,  Currency,  WarehouseCode,  BarCode,  PickQuantity,  PickListIdNumber,  [FreeText],  ShippingMethod,  NetTaxAmount,  LineStatus,  PackageQuantity,  ActualDeliveryDate,  UoMCode,  InventoryQuantity,  U_metrosxpiezas,  U_articulosTienda,  U_metrosCliente,  U_Mayor) VALUES (  @DocEntry,  @DocNum,  @LineNum,  @ItemCode,  @ItemDescription,  @Quantity,  @Price,  @PriceAfterVAT,  @Currency,  @WarehouseCode,  @BarCode,  @PickQuantity,  @PickListIdNumber,  @FreeText,  @ShippingMethod,  @NetTaxAmount,  @LineStatus,  @PackageQuantity,  @ActualDeliveryDate,  @UoMCode,  @InventoryQuantity,  @U_metrosxpiezas,  @U_articulosTienda,  @U_metrosCliente,  @U_Mayor);"/>
    <add key="update_transfer_header" value="UPDATE   dbo.StockTranfers_Header  SET   DocEntry = @DocEntry,  DocDate = @DocDate,  DueDate = @DueDate,  CardCode = @CardCode,  CardName = @CardName,  JournalMemo = @JournalMemo,  FromWarehouse = @FromWarehouse,  ToWarehouse = @ToWarehouse,  CreationDate = @CreationDate,  UpdateDate = @UpdateDate,  TaxDate = @TaxDate,  DocumentStatus = @DocumentStatus,  [User] = @User WHERE DocEntry=@DocEntry ;"/>
    <add key="insert_transfer_header" value="INSERT INTO   dbo.StockTranfers_Header(  DocEntry,  DocDate,  DueDate,  CardCode,  CardName,  JournalMemo,  FromWarehouse,  ToWarehouse,  CreationDate,  UpdateDate,  TaxDate,  DocumentStatus,  [User]) VALUES (  @DocEntry,  @DocDate,  @DueDate,  @CardCode,  @CardName,  @JournalMemo,  @FromWarehouse,  @ToWarehouse,  @CreationDate,  @UpdateDate,  @TaxDate,  @DocumentStatus,  @User);"/>
    <add key="update_transfer_detail" value="UPDATE   dbo.StockTranfers_detail  SET   LineNum = @LineNum,  DocEntry = @DocEntry,  ItemCode = @ItemCode,  ItemDescription = @ItemDescription,  Quantity = @Quantity,  Price = @Price,  Currency = @Currency,  SerialNumber = @SerialNumber,  WarehouseCode = @WarehouseCode,  FromWarehouseCode = @FromWarehouseCode,  UnitsOfMeasurment = @UnitsOfMeasurment,  UoMCode = @UoMCode,  InventoryQuantity = @InventoryQuantity,  LineStatus = @LineStatus WHERE DocEntry=@DocEntry ;"/>
    <add key="insert_transfer_detail" value="INSERT INTO   dbo.StockTranfers_detail(  LineNum,  DocEntry,  ItemCode,  ItemDescription,  Quantity,  Price,  Currency,  SerialNumber,  WarehouseCode,  FromWarehouseCode,  UnitsOfMeasurment,  UoMCode,  InventoryQuantity,  LineStatus) VALUES (  @LineNum,  @DocEntry,  @ItemCode,  @ItemDescription,  @Quantity,  @Price,  @Currency,  @SerialNumber,  @WarehouseCode,  @FromWarehouseCode,  @UnitsOfMeasurment,  @UoMCode,  @InventoryQuantity,  @LineStatus);"/>
    <add key="update_transfer_header_in" value="UPDATE   dbo.StockTranfers_Header_in  SET   DocEntry = @DocEntry,  DocDate = @DocDate,  DueDate = @DueDate,  CardCode = @CardCode,  CardName = @CardName,  JournalMemo = @JournalMemo,  FromWarehouse = @FromWarehouse,  ToWarehouse = @ToWarehouse,  CreationDate = @CreationDate,  UpdateDate = @UpdateDate,  TaxDate = @TaxDate,  DocumentStatus = @DocumentStatus,  [User] = @User WHERE DocEntry=@DocEntry ;"/>
    <add key="insert_transfer_header_in" value="INSERT INTO   dbo.StockTranfers_Header_in (  DocEntry,  DocDate,  DueDate,  CardCode,  CardName,  JournalMemo,  FromWarehouse,  ToWarehouse,  CreationDate,  UpdateDate,  TaxDate,  DocumentStatus,  [User]) VALUES (  @DocEntry,  @DocDate,  @DueDate,  @CardCode,  @CardName,  @JournalMemo,  @FromWarehouse,  @ToWarehouse,  @CreationDate,  @UpdateDate,  @TaxDate,  @DocumentStatus,  @User);"/>
    <add key="update_transfer_detail_in" value="UPDATE   dbo.StockTranfers_detail_in  SET   LineNum = @LineNum,  DocEntry = @DocEntry,  ItemCode = @ItemCode,  ItemDescription = @ItemDescription,  Quantity = @Quantity,Quantity_recibida=@Quantity_recibida,  Price = @Price,  Currency = @Currency,  SerialNumber = @SerialNumber,  WarehouseCode = @WarehouseCode,  FromWarehouseCode = @FromWarehouseCode,  UnitsOfMeasurment = @UnitsOfMeasurment,  UoMCode = @UoMCode,  InventoryQuantity = @InventoryQuantity,  LineStatus = @LineStatus,codigo_escaneado=@codigo_escaneado WHERE DocEntry=@DocEntry ;"/>
    <add key="insert_transfer_detail_in" value="INSERT INTO   dbo.StockTranfers_detail_in(  LineNum,  DocEntry,  ItemCode,  ItemDescription,  Quantity,Quantity_recibida,  Price,  Currency,  SerialNumber,  WarehouseCode,  FromWarehouseCode,  UnitsOfMeasurment,  UoMCode,  InventoryQuantity,  LineStatus,codigo_escaneado) VALUES (  @LineNum,  @DocEntry,  @ItemCode,  @ItemDescription,  @Quantity,@Quantity_recibida,  @Price,  @Currency,  @SerialNumber,  @WarehouseCode,  @FromWarehouseCode,  @UnitsOfMeasurment,  @UoMCode,  @InventoryQuantity,  @LineStatus,@codigo_escaneado);"/>
    <add key="buscar_ultimo_inventario_ciclico" value="select max(coalesce(No_Conteo,0))+1 as conteo from detalle_inventario_ciclico"/>
    <add key="buscar_ultimo_id_inventario_ciclico" value="select max(coalesce(No_detalleinv_ciclico,0))+1 as conteo from detalle_inventario_ciclico"/>
    <add key="getallarticulosbydetalleinventariociclico" value="select * from articulos where 1=1 "/>
    <add key="ConsultaPuntos" value="select  cedula, nombre, pacumulado from Fidelizaciones" />
    <add key="ConsultaPuntosByCedula" value="select  cedula, nombre, pacumulado from Fidelizaciones where cedula = @no_cedula" />
    <add key="consultaazure" value="https://casamichelrd.com/webapi/api/productos/GetProductByCode?Sucursal=14&amp;Nivel=4&amp;Factor=1&amp;Codigo=" />
    <!--<add key="consultaazure" value="http://hpt-simapp.azurewebsites.net/Tiendaminaya/api/producto/getbycode/1/1/1/" />-->

    <!-- ========================================================= -->
    <!-- Creación de tablas y BD -->
    <add key="crear_base_datos" value="create database"/>
    <add key="verificar_existencia_base_datos" value="SELECT CASE WHEN DB_ID(@nombre_base_datos) IS NOT NULL THEN 1 ELSE 0 END"/>
    <add key="crear_tabla_articulos" value="CREATE TABLE articulos (id INT NOT NULL PRIMARY KEY IDENTITY, no_articulo VARCHAR(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, codigo_barra VARCHAR(30) COLLATE SQL_Latin1_General_CP1_CI_AS DEFAULT NULL, alterno1 VARCHAR(20) COLLATE SQL_Latin1_General_CP1_CI_AS DEFAULT NULL, alterno2 VARCHAR(20) COLLATE SQL_Latin1_General_CP1_CI_AS DEFAULT NULL, alterno3 VARCHAR(20) COLLATE SQL_Latin1_General_CP1_CI_AS DEFAULT NULL, descripcion VARCHAR(200) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, existencia FLOAT DEFAULT NULL, unidad_medida VARCHAR(20) COLLATE SQL_Latin1_General_CP1_CI_AS DEFAULT NULL, costo FLOAT DEFAULT NULL, precio FLOAT DEFAULT NULL, referencia VARCHAR(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL DEFAULT '', marca VARCHAR(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL DEFAULT '', familia VARCHAR(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, created_at DATETIME2(0) NOT NULL DEFAULT (getdate()), updated_at DATETIME2(0) NOT NULL DEFAULT (getdate()))"/>
    <add key="crear_tabla_articulos_temp" value="CREATE TABLE articulos_temp (id INT NOT NULL PRIMARY KEY IDENTITY, no_articulo VARCHAR(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, codigo_barra VARCHAR(30) COLLATE SQL_Latin1_General_CP1_CI_AS DEFAULT NULL, alterno1 VARCHAR(20) COLLATE SQL_Latin1_General_CP1_CI_AS DEFAULT NULL, alterno2 VARCHAR(20) COLLATE SQL_Latin1_General_CP1_CI_AS DEFAULT NULL, alterno3 VARCHAR(20) COLLATE SQL_Latin1_General_CP1_CI_AS DEFAULT NULL, descripcion VARCHAR(200) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, existencia FLOAT DEFAULT NULL, unidad_medida VARCHAR(20) COLLATE SQL_Latin1_General_CP1_CI_AS DEFAULT NULL, costo FLOAT DEFAULT NULL, precio FLOAT DEFAULT NULL, referencia VARCHAR(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL DEFAULT '', marca VARCHAR(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL DEFAULT '', familia VARCHAR(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, created_at DATETIME2(0) NOT NULL DEFAULT (getdate()), updated_at DATETIME2(0) NOT NULL DEFAULT (getdate()))"/>
    <add key="crear_tabla_detalle_inventario" value="CREATE TABLE detalle_inventario (id INT NOT NULL PRIMARY KEY IDENTITY(10, 1), id_terminal VARCHAR(150) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, no_detalleInv VARCHAR(15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, no_articulo VARCHAR(15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, codigo_barra VARCHAR(30) COLLATE  SQL_Latin1_General_CP1_CI_AS NOT NULL, alterno1 VARCHAR(20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, alterno2 VARCHAR(20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, alterno3 VARCHAR(20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, descripcion VARCHAR(200) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, cantidad FLOAT NOT NULL, costo FLOAT NOT NULL, costo_total FLOAT NOT NULL, precio FLOAT NOT NULL, precio_total FLOAT NOT NULL, id_ubicacion INT DEFAULT NULL, cod_alterno VARCHAR(10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, fecha_registro DATETIME2(0) NOT NULL, fecha_modificacion DATETIME2(0) NOT NULL, id_usuario_registro INT NOT NULL, id_usuario_modificacion INT NOT NULL, id_auditor INT NOT NULL DEFAULT 0, id_tipo_auditoria INT NOT NULL DEFAULT 0, pre_conteo FLOAT NOT NULL DEFAULT 0, cantidad_auditada FLOAT NOT NULL DEFAULT 0, diferencia FLOAT NOT NULL DEFAULT 0, porcentaje_diferencia FLOAT NOT NULL DEFAULT 0, id_tipo_error INT NOT NULL DEFAULT 0, notas VARCHAR(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL DEFAULT '', estado INT NOT NULL, codigo_capturado VARCHAR(30) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL DEFAULT '', created_at DATETIME2(0) NOT NULL DEFAULT (GETDATE()), updated_at DATETIME2(0) NOT NULL DEFAULT (GETDATE()), CONSTRAINT id_terminal_no_detalleInv UNIQUE(id_terminal, no_detalleInv))"/>
    <add key="crear_tabla_tokens" value="CREATE TABLE tokens (id INT NOT NULL PRIMARY KEY IDENTITY, uuid VARCHAR(36) NOT NULL, token VARCHAR(150) NOT NULL, user_id INT NOT NULL, created_at DATETIME2(0) NOT NULL, updated_at DATETIME2(0) NOT NULL, state INT NOT NULL)"/>
    <add key="crear_tabla_ubicaciones" value="CREATE TABLE ubicaciones (id INT NOT NULL PRIMARY KEY IDENTITY, descripcion VARCHAR(100) COLLATE SQL_Latin1_General_CP1_CI_AS DEFAULT NULL, cod_alterno VARCHAR (10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, id_tipo_ubicacion INT NOT NULL, estado INT NOT NULL, created_at DATETIME2(0) NOT NULL DEFAULT (GETDATE()), updated_at DATETIME2(0) NOT NULL DEFAULT (GETDATE()))"/>
    <add key="crear_tabla_ubicaciones_temp" value="CREATE TABLE ubicaciones_temp (id INT NOT NULL PRIMARY KEY IDENTITY, descripcion VARCHAR(100) COLLATE SQL_Latin1_General_CP1_CI_AS DEFAULT NULL, cod_alterno VARCHAR (10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, id_tipo_ubicacion INT NOT NULL, estado INT NOT NULL, created_at DATETIME2(0) NOT NULL DEFAULT (GETDATE()), updated_at DATETIME2(0) NOT NULL DEFAULT (GETDATE()))"/>
    <add key="crear_tabla_tipo_ubicacion" value="CREATE TABLE tipo_ubicacion (id INT PRIMARY KEY NOT NULL IDENTITY, descripcion VARCHAR(MAX) NOT NULL, created_at DATETIME2(0) NOT NULL, updated_at DATETIME2(0) NOT NULL)"/>
    <add key="crear_tabla_cuenta" value="CREATE TABLE cuenta (id INT PRIMARY KEY NOT NULL IDENTITY, maestraitem INT NOT NULL, created_at DATETIME2(0) NOT NULL, updated_at DATETIME2(0) NOT NULL)"/>
    <add key="crear_tabla_detalle_auditorias" value="CREATE TABLE detalle_auditorias (id INT PRIMARY KEY NOT NULL IDENTITY(2, 1), id_terminal VARCHAR(150) NOT NULL, no_detalleInv VARCHAR(15) NOT NULL, no_articulo VARCHAR(15) NOT NULL, descripcion VARCHAR(200) NOT NULL, id_tipo_ubicacion INT NOT NULL, cod_alterno VARCHAR(10) NOT NULL, pre_conteo FLOAT NOT NULL, cantidad_auditada FLOAT NOT NULL, diferencia FLOAT NOT NULL, porcentaje_diferencia FLOAT NOT NULL, id_tipo_error INT NOT NULL, notas VARCHAR(MAX) NOT NULL, codigo_barra VARCHAR(30) NOT NULL, id_usuario_registro INT NOT NULL, secuencia_tiro INT NOT NULL, alterno1 VARCHAR(20) NOT NULL, alterno2 VARCHAR(20) NOT NULL, alterno3 VARCHAR(20) NOT NULL, cantidad FLOAT NOT NULL, costo FLOAT NOT NULL, costo_total FLOAT NOT NULL, precio FLOAT NOT NULL, precio_total FLOAT NOT NULL, id_ubicacion INT NOT NULL, fecha_registro DATETIME2(0) NOT NULL, fecha_modificacion DATETIME2(0) NOT NULL, id_usuario_modificacion INT NOT NULL, id_auditor INT NOT NULL, id_tipo_auditoria INT NOT NULL, estado INT NOT NULL, created_at DATETIME2(0) NOT NULL, updated_at DATETIME2(0) NOT NULL)"/>
    <add key="crear_tabla_tipo_error" value="CREATE TABLE tipo_error (id INT PRIMARY KEY NOT NULL IDENTITY, descripcion VARCHAR(MAX) NOT NULL, created_at DATETIME2(0) NOT NULL, updated_at DATETIME2(0) NOT NULL)"/>
    <add key="crear_tabla_tipo_auditorias" value="CREATE TABLE tipo_auditorias (id INT PRIMARY KEY NOT NULL IDENTITY, descripcion VARCHAR(MAX) NOT NULL, created_at DATETIME2(0) NOT NULL, updated_at DATETIME2(0) NOT NULL)"/>
    <add key="crear_tabla_usuarios_auditoria" value="CREATE TABLE usuarios_auditoria (id INT PRIMARY KEY NOT NULL IDENTITY, nombre VARCHAR(30) NOT NULL, apellido VARCHAR(60) NOT NULL, usuario VARCHAR(250) NOT NULL, password VARCHAR(100) NOT NULL, estado INT NOT NULL, tipo_usuario INT NOT NULL, created_at DATETIME2(0) NOT NULL, updated_at DATETIME2(0) NOT NULL)"/>
    <add key="crear_tabla_usuarios" value="CREATE TABLE usuarios (id INT NOT NULL PRIMARY KEY IDENTITY, nombre VARCHAR(30) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, apellido VARCHAR(60) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, usuario VARCHAR(20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, password VARCHAR(100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, estado INT NOT NULL, created_at DATETIME2(0) NOT NULL DEFAULT (GETDATE()), updated_at DATETIME2(0) NOT NULL DEFAULT (GETDATE()))"/>
    <add key="crear_tabla_usuarios_temp" value="CREATE TABLE usuarios_temp (id INT NOT NULL PRIMARY KEY IDENTITY, nombre VARCHAR(30) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, apellido VARCHAR(60) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, usuario VARCHAR(20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, password VARCHAR(100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, estado INT NOT NULL, created_at DATETIME2(0) NOT NULL DEFAULT (GETDATE()), updated_at DATETIME2(0) NOT NULL DEFAULT (GETDATE()))"/>
    <add key="crear_tabla_ayudantes" value="CREATE TABLE ayudantes (id INT PRIMARY KEY NOT NULL IDENTITY, codigo_unico VARCHAR(100) NOT NULL, nombre VARCHAR(150) NOT NULL, created_at DATETIME2(0) NOT NULL, updated_at DATETIME2(0) NOT NULL, CONSTRAINT codigo_unico_ayudante UNIQUE(codigo_unico))"/>
    <add key="crear_tabla_ayudantes_temp" value="CREATE TABLE ayudantes_temp (id INT PRIMARY KEY NOT NULL IDENTITY, codigo_unico VARCHAR(100) NOT NULL, nombre VARCHAR(150) NOT NULL, created_at DATETIME2(0) NOT NULL, updated_at DATETIME2(0) NOT NULL, CONSTRAINT codigo_unico_ayudante_temp UNIQUE(codigo_unico))"/>
    <add key="crear_tabla_asignaciones" value="CREATE TABLE asignaciones (id INT PRIMARY KEY NOT NULL IDENTITY(3, 1), codigo_unico VARCHAR(100) NOT NULL, cod_alterno VARCHAR(10) NOT NULL, descripcion VARCHAR(MAX) NOT NULL, id_usuario INT NOT NULL, id_ayudante INT NOT NULL, nombre_usuario VARCHAR(150) NOT NULL, nombre_ayudante VARCHAR(150) NOT NULL, created_at DATETIME2(0) NOT NULL, updated_at DATETIME2(0) NOT NULL, CONSTRAINT codigo_unico_asignaciones UNIQUE(codigo_unico))"/>
    <add key="crear_tabla_asignaciones_temp" value="CREATE TABLE asignaciones_temp (id INT PRIMARY KEY NOT NULL IDENTITY(3, 1), codigo_unico VARCHAR(100) NOT NULL, cod_alterno VARCHAR(10) NOT NULL, descripcion VARCHAR(MAX) NOT NULL, id_usuario INT NOT NULL, id_ayudante INT NOT NULL, nombre_usuario VARCHAR(150) NOT NULL, nombre_ayudante VARCHAR(150) NOT NULL, created_at DATETIME2(0) NOT NULL, updated_at DATETIME2(0) NOT NULL, CONSTRAINT codigo_unico_asignaciones_temp UNIQUE(codigo_unico))"/>
    <add key="crear_tabla_detalle_inventario_ciclico" value="CREATE TABLE detalle_inventario_ciclico (id INT PRIMARY KEY NOT NULL IDENTITY, no_articulo VARCHAR(15) NOT NULL, codigo_barra VARCHAR(30) NOT NULL, alterno1 VARCHAR(20) NOT NULL, alterno2 VARCHAR(20) NOT NULL, alterno3 VARCHAR(20) NOT NULL, descripcion VARCHAR(200) NOT NULL, existencia FLOAT NOT NULL, unidad_medida VARCHAR(MAX) NOT NULL, costo FLOAT NOT NULL, precio FLOAT NOT NULL, referencia VARCHAR(MAX) NOT NULL, marca VARCHAR(MAX) NOT NULL, id_familia_productos INT NOT NULL, id_clasificacion INT NOT NULL, fecha_asignada_ciclico date NOT NULL, estado INT NOT NULL, no_detalleinv_ciclico VARCHAR(15) NOT NULL, id_terminal VARCHAR(150) NOT NULL, cantidad FLOAT NOT NULL, diferencia_valor_absoluto FLOAT NOT NULL, acierto INT NOT NULL, falla INT NOT NULL, id_usuario_registro INT NOT NULL, fecha_registro date NOT NULL, created_at DATETIME2(0) NOT NULL, updated_at DATETIME2(0) NOT NULL)"/>
    <add key="crear_tabla_clasificacion" value="CREATE TABLE clasificacion (id INT PRIMARY KEY NOT NULL IDENTITY, codigo_unico VARCHAR(100) NOT NULL, descripcion VARCHAR(MAX) NOT NULL, created_at DATETIME2(0) NOT NULL, updated_at DATETIME2(0) NOT NULL, CONSTRAINT codigo_unico_clasificacion UNIQUE(codigo_unico))"/>
    <add key="crear_tabla_familias_productos" value="CREATE TABLE familias_productos (id INT PRIMARY KEY NOT NULL IDENTITY, descripcion VARCHAR(MAX) NOT NULL, created_at DATETIME2(0) NOT NULL, updated_at DATETIME2(0) NOT NULL)"/>
    <add key="crear_tabla_codigos_barras" value="CREATE TABLE codigos_barras (id INT PRIMARY KEY NOT NULL IDENTITY, no_articulo VARCHAR(150) NOT NULL, codigo_barra VARCHAR(150) NOT NULL, created_at DATETIME2(0) NOT NULL, updated_at DATETIME2(0) NOT NULL)"/>
    <add key="crear_tabla_codigos_barras_temp" value="CREATE TABLE codigos_barras_temp (id INT PRIMARY KEY NOT NULL IDENTITY, no_articulo VARCHAR(150) NOT NULL, codigo_barra VARCHAR(150) NOT NULL, created_at DATETIME2(0) NOT NULL, updated_at DATETIME2(0) NOT NULL)"/>
    <add key="crear_tabla_detalle_inventario_transitorio" value="CREATE TABLE detalle_inventario_transitorio (id INT NOT NULL PRIMARY KEY IDENTITY, id_terminal VARCHAR(150) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, no_detalleInv VARCHAR(15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, no_articulo VARCHAR(15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, codigo_barra VARCHAR(30) COLLATE  SQL_Latin1_General_CP1_CI_AS NOT NULL, alterno1 VARCHAR(20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, alterno2 VARCHAR(20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, alterno3 VARCHAR(20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, descripcion VARCHAR(200) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, cantidad FLOAT NOT NULL, costo FLOAT NOT NULL, costo_total FLOAT NOT NULL, precio FLOAT NOT NULL, precio_total FLOAT NOT NULL, id_ubicacion INT DEFAULT NULL, cod_alterno VARCHAR(10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, fecha_registro DATETIME2(0) NOT NULL, fecha_modificacion DATETIME2(0) NOT NULL, id_usuario_registro INT NOT NULL, id_usuario_modificacion INT NOT NULL, id_auditor INT NOT NULL DEFAULT 0, id_tipo_auditoria INT NOT NULL DEFAULT 0, pre_conteo FLOAT NOT NULL DEFAULT 0, cantidad_auditada FLOAT NOT NULL DEFAULT 0, diferencia FLOAT NOT NULL DEFAULT 0, porcentaje_diferencia FLOAT NOT NULL DEFAULT 0, id_tipo_error INT NOT NULL DEFAULT 0, notas VARCHAR(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL DEFAULT '', estado INT NOT NULL, codigo_capturado VARCHAR(30) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL DEFAULT '', created_at DATETIME2(0) NOT NULL DEFAULT (GETDATE()), updated_at DATETIME2(0) NOT NULL DEFAULT (GETDATE()), generado BIT NOT NULL, ultimo_mensaje_error VARCHAR(200) NOT NULL, CONSTRAINT detalle_inventario_transitorio_idterminal_detalle UNIQUE(id_terminal, no_detalleInv))"/>
    <add key="crear_tabla_historial_de_jobs" value="CREATE TABLE historial_de_jobs (id INT NOT NULL PRIMARY KEY IDENTITY, job VARCHAR(100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL, fue_completado BIT NOT NULL, mensaje_error VARCHAR(500) COLLATE  SQL_Latin1_General_CP1_CI_AS NOT NULL, fecha DATETIME2(0) NOT NULL)"/>
    <add key="crear_tabla_purchase_order_header" value="CREATE TABLE PurchaseOrderHeader ([Id] [int] PRIMARY KEY IDENTITY(1,1) NOT NULL, [DocNum] [varchar](50) NOT NULL, [DocDate] [datetime2](0) NOT NULL, [DocDueDate]  [datetime2](0) NOT NULL, [CardName] [varchar](100) NOT NULL, [NumAtCard] [varchar](50) NOT NULL, [DocRate] [money] NOT NULL, [JournalMemo] [varchar](max) NOT NULL, [TaxDate] [datetime2](0) NOT NULL, [DocTotalFc] [money] NOT NULL, [DocTotalSys] [money] NOT NULL, [DocumentStatus] [varchar](50) NOT NULL, [U_NCF] [varchar](20) NOT NULL, [TotalLines] [int] NOT NULL)"/>
    <add key="crear_tabla_purchase_order_detail" value="CREATE TABLE PurchaseOrderDetail ([Id] [int] PRIMARY KEY IDENTITY(1,1) NOT NULL, [DocNum] [varchar](50) NOT NULL, [LineNum] [int] NOT NULL, [ItemCode]  [varchar](50) NOT NULL, [ItemDescription] [varchar](200) NOT NULL, [Quantity] [int] NOT NULL, [Costo_Unitario] [money] NOT NULL, [BarCode] [varchar](50) NOT NULL, [UoMCode] [varchar](50) NOT NULL, [LineStatus] [varchar](50) NOT NULL, [UserName] [varchar](20) NOT NULL, [WarehouseCode] [varchar](20) NOT  NULL, [BinLocation] [varchar](50) NOT NULL, [Costo_Total] [money] NOT NULL, [Itbis] [money] NOT NULL)"/>
    <add key="crear_tabla_purchase_order_header_batch" value="CREATE TABLE PurchaseOrderHeaderBath ([Id] [int] PRIMARY KEY IDENTITY(1,1) NOT NULL, [DocNum] [varchar](50) NOT NULL, [DocDate] [datetime2](0) NOT NULL, [DocDueDate]  [datetime2](0) NOT NULL, [CardName] [varchar](100) NOT NULL, [NumAtCard] [varchar](50) NOT NULL, [DocRate] [money] NOT NULL, [JournalMemo] [varchar](max) NOT NULL, [TaxDate] [datetime2](0) NOT NULL, [DocTotalFc] [money] NOT NULL, [DocTotalSys] [money] NOT NULL, [DocumentStatus] [varchar](50) NOT NULL, [U_NCF] [varchar](20) NOT NULL, [TotalLines] [int] NOT NULL)"/>
    <add key="crear_tabla_purchase_order_detail_batch" value="CREATE TABLE PurchaseOrderDetailBath ([Id] [int] PRIMARY KEY IDENTITY(1,1) NOT NULL, [DocNum] [varchar](50) NOT NULL, [LineNum] [int] NOT NULL, [ItemCode]  [varchar](50) NOT NULL, [ItemDescription] [varchar](200) NOT NULL, [Quantity] [int] NOT NULL, [Costo_Unitario] [money] NOT NULL, [BarCode] [varchar](50) NOT NULL, [UoMCode] [varchar](50) NOT NULL, [LineStatus] [varchar](50) NOT NULL, [UserName] [varchar](20) NOT NULL, [WarehouseCode] [varchar](20) NOT  NULL, [BinLocation] [varchar](50) NOT NULL, [Costo_Total] [money] NOT NULL, [Itbis] [money] NOT NULL)"/>
    <add key="crear_tabla_business_partners" value="CREATE TABLE BusinessPartners ([Id] [int] PRIMARY KEY IDENTITY(1,1) NOT NULL, [BusinessName] [nvarchar](200) NOT NULL, [CardCode] [varchar](100) NOT NULL, [CardName] [varchar](100) NOT NULL, [CardType] [varchar](100) NOT NULL, [Notes] [nvarchar](500) NOT NULL, [FederalTaxId] [int] NOT NULL, [Currency] [varchar](50) NOT NULL, [VatLiable] [varchar](50) NOT NULL, [CreatedAt] [datetime2](0) NOT NULL, [UpdatedAt] [datetime2](0) NOT NULL,)"/>
    <add key="crear_vista_ubicaciones" value=" create view v_resumebyubicacion as        SELECT COUNT(1) as nro_tiros,            COUNT(DISTINCT d.no_articulo) as suma_articulos,           SUM(d.costo_total) as costo_total,           SUM(d.precio_total) as precio_total,           d.id_ubicacion           FROM detalle_inventario d            GROUP BY d.id_ubicacion ; "/>
    <add key="crear_tabla_articulos_ubicaciones" value="CREATE TABLE articulos_ubicaciones (id int NOT NULL PRIMARY KEY identity,   No_Articulo varchar(150) NOT NULL,   Descripcion varchar(250) NOT NULL,   Ubicacion varchar(100) NOT NULL,   Codigo_Barras varchar(100) NOT NULL,   Tipo_ubicacion int NOT NULL   )"/>
    <add key="crear_tabla_articulos_ubicaciones_temp" value="CREATE TABLE articulos_ubicaciones_temp (id int NOT NULL PRIMARY KEY identity,   No_Articulo varchar(150) NOT NULL,   Descripcion varchar(250) NOT NULL,   Ubicacion varchar(100) NOT NULL,   Codigo_Barras varchar(100) NOT NULL,   Tipo_ubicacion int NOT NULL   )"/>
    <add key="crear_tabla_codigos_inexistentes" value="CREATE TABLE log_codigos_inexistentes (      Id int NOT NULL IDENTITY(1,1),      Id_Terminal varchar(150) NOT NULL,      Barcode varchar(30) NOT NULL,      id_almacen int NOT NULL,      Id_Ubicacion int NOT NULL,      Id_usuario int NOT NULL,      Fecha datetime NOT NULL  )"/>
    <add key="crear_tabla_logs_impresion" value="CREATE TABLE log_impresiones (      Id int NOT NULL IDENTITY(1,1),      Id_Terminal varchar(150) NOT NULL,      Barcode varchar(30) NOT NULL,      cantidad_impresiones int NOT NULL,      Id_usuario int NOT NULL,      No_articulo varchar NOT NULL, Fecha datetime NOT NULL    )"/>
    <!-- ======================================================== -->
    <!-- Iniciación de tablas de BD -->
    <add key="insertar_datos_usuarios" value="INSERT INTO usuarios (nombre, apellido, usuario, password, estado, created_at, updated_at) VALUES ('admin', 'admin', 'admin', 'admin', 1, @TodayDate, @TodayDate)"/>
    <add key="insertar_datos_tipo_ubicacion1" value="INSERT INTO tipo_ubicacion (descripcion, created_at, updated_at) VALUES ('tienda', @TodayDate, @TodayDate)"/>
    <add key="insertar_datos_tipo_ubicacion2" value="INSERT INTO tipo_ubicacion (descripcion, created_at, updated_at) VALUES ('almacen', @TodayDate, @TodayDate)"/>
    <add key="insertar_datos_tipo_auditorias1" value="INSERT INTO tipo_auditorias (descripcion, created_at, updated_at) VALUES ('Cantidad = Tiro', @TodayDate, @TodayDate)"/>
    <add key="insertar_datos_tipo_auditorias2" value="INSERT INTO tipo_auditorias (descripcion, created_at, updated_at) VALUES ('Por Monto', @TodayDate, @TodayDate)"/>
    <add key="insertar_datos_tipo_auditorias3" value="INSERT INTO tipo_auditorias (descripcion, created_at, updated_at) VALUES ('Duplicado', @TodayDate, @TodayDate)"/>
    <add key="insertar_datos_tipo_auditorias4" value="INSERT INTO tipo_auditorias (descripcion, created_at, updated_at) VALUES ('Captura Item', @TodayDate, @TodayDate)"/>
    <add key="insertar_datos_usuarios_auditoria" value="INSERT INTO usuarios_auditoria (nombre, apellido, usuario, password, estado, tipo_usuario, created_at, updated_at) VALUES ('au01', 'au01', 'au01', '123', 1, 1, @TodayDate, @TodayDate)"/>
    <add key="insertar_datos_clasificacion1" value="INSERT INTO clasificacion (codigo_unico, descripcion, created_at, updated_at) VALUES ('0001','A', @TodayDate, @TodayDate)"/>
    <add key="insertar_datos_clasificacion2" value="INSERT INTO clasificacion (codigo_unico, descripcion, created_at, updated_at) VALUES ('0002','B', @TodayDate, @TodayDate)"/>
    <add key="insertar_datos_clasificacion3" value="INSERT INTO clasificacion (codigo_unico, descripcion, created_at, updated_at) VALUES ('0003','C', @TodayDate, @TodayDate)"/>
    <add key="default_db" value="dbconnection"/>
    <!-- ======================================================== -->
    <!-- Configuración de scheduler -->
    <add key="inhabilitado" value="0"/>
    <add key="detalle_inventario_job_inhabilitado" value="false"/>
    <add key="habilitar_itemsapjob" value="false"/>
    <add key="habilitar_itemgroupsapjob" value="false"/>
    <add key="habilitar_itemcheckstocksapjob" value="false"/>
    <add key="habilitar_BusinessPartnerssapjob" value="false"/>
    <add key="habilitar_warehousejob" value="false"/>
    <add key="habilitar_conducesapjob" value="false"/>
    <add key="activedbconnection" value="dbconnection"/>
    <!-- ======================================================== -->
  </appSettings>
  <connectionStrings>
    <add name="dbconnection" connectionString="Server = localhost\SQLEXPRESS; Database = db_wmsmobile; User Id = kiosko; Password = kiosko; " providerName="System.Data.SqlClient"/>
    <add name="db1" connectionString="Server = localhost\SQLEXPRESS; Database = db_wmsmobile; User Id = kiosko; Password = kiosko; " providerName="System.Data.SqlClient"/>
    <add name="db2" connectionString="Server = localhost; Port=3306; Database = baban; User Id = root; Password = root; " providerName="Mysql"/>
    <add name="db3" connectionString="Server = localhost\SQLEXPRESS; Database = db_test; User Id = kiosko; Password = kiosko; " providerName="System.Data.SqlClient"/>
    <add name="db4testpostgres" connectionString="Server = localhost; Port=5432; Database = wmsmobile; User Id = postgres; Password = letmein; " providerName="Npgsql"/>
    <add name="db5testmysql" connectionString="Server = localhost; Port=3306; Database = baban; User Id = root; Password = root; " providerName="Mysql"/>
  </connectionStrings>
  <!--
    For a description of web.config changes see http://go.microsoft.com/fwlink/?LinkId=235367.

    The following attributes can be set on the <httpRuntime> tag.
      <system.Web>
        <httpRuntime targetFramework="4.7.2" />
      </system.Web>
  -->
  <system.web>
    <compilation debug="true" targetFramework="4.6.1"/>
    <httpRuntime/>
    <pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID"/>
  </system.web>
  <system.webServer>
    <handlers>
      <remove name="ExtensionlessUrlHandler-Integrated-4.0"/>
      <remove name="OPTIONSVerbHandler"/>
      <remove name="TRACEVerbHandler"/>
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="*" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0"/>
    </handlers>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Antlr3.Runtime" publicKeyToken="eb42632606e9261f"/>
        <bindingRedirect oldVersion="0.0.0.0-3.5.0.2" newVersion="3.5.0.2"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" culture="neutral" publicKeyToken="30ad4fe6b2a6aeed"/>
        <bindingRedirect oldVersion="0.0.0.0-13.0.0.0" newVersion="13.0.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Optimization" publicKeyToken="31bf3856ad364e35"/>
        <bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="1.1.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35"/>
        <bindingRedirect oldVersion="0.0.0.0-1.6.5135.21930" newVersion="1.6.5135.21930"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35"/>
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35"/>
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35"/>
        <bindingRedirect oldVersion="1.0.0.0-5.2.7.0" newVersion="5.2.7.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Buffers" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-4.0.3.0" newVersion="4.0.3.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Runtime.InteropServices.RuntimeInformation" publicKeyToken="b03f5f7f11d50a3a" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-4.0.2.0" newVersion="4.0.2.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Http" publicKeyToken="31bf3856ad364e35" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-5.2.7.0" newVersion="5.2.7.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http.Formatting" publicKeyToken="31bf3856ad364e35" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-5.2.7.0" newVersion="5.2.7.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Threading.Tasks.Extensions" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-4.2.0.0" newVersion="4.2.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Memory" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-4.0.1.1" newVersion="4.0.1.1"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Text.Encodings.Web" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Numerics.Vectors" publicKeyToken="b03f5f7f11d50a3a" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-4.1.3.0" newVersion="4.1.3.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Runtime.CompilerServices.Unsafe" publicKeyToken="b03f5f7f11d50a3a" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Bcl.AsyncInterfaces" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-5.0.0.0" newVersion="5.0.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Diagnostics.DiagnosticSource" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-4.0.3.0" newVersion="4.0.3.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Text.Json" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http" publicKeyToken="b03f5f7f11d50a3a" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-4.2.0.0" newVersion="4.2.0.0"/>
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>